/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing DomainsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DomainsApiTests : IDisposable
    {
        private DomainsApi instance;

        public DomainsApiTests()
        {
            instance = new DomainsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DomainsApi
            //Assert.IsType<DomainsApi>(instance);
        }

        /// <summary>
        /// Test GetCmsV3DomainsDomainIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3DomainsDomainIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string domainId = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3DomainsDomainIdGetById(domainId, archived);
            //Assert.IsType<Domain>(response);
        }

        /// <summary>
        /// Test GetCmsV3DomainsGetPage
        /// </summary>
        [Fact]
        public void GetCmsV3DomainsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? createdAt = null;
            //long? createdAfter = null;
            //long? createdBefore = null;
            //long? updatedAt = null;
            //long? updatedAfter = null;
            //long? updatedBefore = null;
            //List<string> sort = null;
            //List<string> properties = null;
            //string after = null;
            //string before = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3DomainsGetPage(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, properties, after, before, limit, archived);
            //Assert.IsType<CollectionResponseWithTotalDomain>(response);
        }
    }
}
