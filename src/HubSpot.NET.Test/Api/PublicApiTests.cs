/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing PublicApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PublicApiTests : IDisposable
    {
        private PublicApi instance;

        public PublicApiTests()
        {
            instance = new PublicApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PublicApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PublicApi
            //Assert.IsType<PublicApi>(instance);
        }

        /// <summary>
        /// Test GetCmsV3SiteSearchIndexedDataContentIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3SiteSearchIndexedDataContentIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentId = null;
            //string type = null;
            //var response = instance.GetCmsV3SiteSearchIndexedDataContentIdGetById(contentId, type);
            //Assert.IsType<IndexedData>(response);
        }

        /// <summary>
        /// Test GetCmsV3SiteSearchSearchSearch
        /// </summary>
        [Fact]
        public void GetCmsV3SiteSearchSearchSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //int? limit = null;
            //int? offset = null;
            //string language = null;
            //bool? matchPrefix = null;
            //bool? autocomplete = null;
            //decimal? popularityBoost = null;
            //decimal? boostLimit = null;
            //decimal? minScore = null;
            //string boostRecent = null;
            //long? tableId = null;
            //string hubdbQuery = null;
            //List<string> domain = null;
            //List<string> type = null;
            //List<string> pathPrefix = null;
            //List<string> property = null;
            //string length = null;
            //List<long> groupId = null;
            //var response = instance.GetCmsV3SiteSearchSearchSearch(q, limit, offset, language, matchPrefix, autocomplete, popularityBoost, boostLimit, minScore, boostRecent, tableId, hubdbQuery, domain, type, pathPrefix, property, length, groupId);
            //Assert.IsType<PublicSearchResults>(response);
        }
    }
}
