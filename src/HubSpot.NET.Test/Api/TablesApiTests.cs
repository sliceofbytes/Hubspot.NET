/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing TablesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TablesApiTests : IDisposable
    {
        private TablesApi instance;

        public TablesApiTests()
        {
            instance = new TablesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TablesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TablesApi
            //Assert.IsType<TablesApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3HubdbTablesTableIdOrNameArchiveTable
        /// </summary>
        [Fact]
        public void DeleteCmsV3HubdbTablesTableIdOrNameArchiveTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //instance.DeleteCmsV3HubdbTablesTableIdOrNameArchiveTable(tableIdOrName);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesDraftGetAllDraftTables
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesDraftGetAllDraftTablesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //DateTimeOffset? createdAt = null;
            //DateTimeOffset? createdAfter = null;
            //DateTimeOffset? createdBefore = null;
            //DateTimeOffset? updatedAt = null;
            //DateTimeOffset? updatedAfter = null;
            //DateTimeOffset? updatedBefore = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3HubdbTablesDraftGetAllDraftTables(sort, after, limit, createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, archived);
            //Assert.IsType<CollectionResponseWithTotalHubDbTableV3ForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesGetAllTables
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesGetAllTablesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //DateTimeOffset? createdAt = null;
            //DateTimeOffset? createdAfter = null;
            //DateTimeOffset? createdBefore = null;
            //DateTimeOffset? updatedAt = null;
            //DateTimeOffset? updatedAfter = null;
            //DateTimeOffset? updatedBefore = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3HubdbTablesGetAllTables(sort, after, limit, createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, archived);
            //Assert.IsType<CollectionResponseWithTotalHubDbTableV3ForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameDraftExportExportDraftTable
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameDraftExportExportDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string format = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameDraftExportExportDraftTable(tableIdOrName, format);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameDraftGetDraftTableDetailsById
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameDraftGetDraftTableDetailsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //bool? archived = null;
            //bool? includeForeignIds = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameDraftGetDraftTableDetailsById(tableIdOrName, archived, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameExportExportTable
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameExportExportTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string format = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameExportExportTable(tableIdOrName, format);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameGetTableDetails
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameGetTableDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //bool? archived = null;
            //bool? includeForeignIds = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameGetTableDetails(tableIdOrName, archived, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PatchCmsV3HubdbTablesTableIdOrNameDraftUpdateDraftTable
        /// </summary>
        [Fact]
        public void PatchCmsV3HubdbTablesTableIdOrNameDraftUpdateDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //HubDbTableV3Request hubDbTableV3Request = null;
            //bool? archived = null;
            //bool? includeForeignIds = null;
            //var response = instance.PatchCmsV3HubdbTablesTableIdOrNameDraftUpdateDraftTable(tableIdOrName, hubDbTableV3Request, archived, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesCreateTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesCreateTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HubDbTableV3Request hubDbTableV3Request = null;
            //var response = instance.PostCmsV3HubdbTablesCreateTable(hubDbTableV3Request);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameDraftCloneCloneDraftTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameDraftCloneCloneDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //HubDbTableCloneRequest hubDbTableCloneRequest = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameDraftCloneCloneDraftTable(tableIdOrName, hubDbTableCloneRequest);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameDraftImportImportDraftTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameDraftImportImportDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string config = null;
            //System.IO.Stream file = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameDraftImportImportDraftTable(tableIdOrName, config, file);
            //Assert.IsType<ImportResult>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameDraftPublishPublishDraftTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameDraftPublishPublishDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //bool? includeForeignIds = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameDraftPublishPublishDraftTable(tableIdOrName, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameDraftResetResetDraftTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameDraftResetResetDraftTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //bool? includeForeignIds = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameDraftResetResetDraftTable(tableIdOrName, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameUnpublishUnpublishTable
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameUnpublishUnpublishTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //bool? includeForeignIds = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameUnpublishUnpublishTable(tableIdOrName, includeForeignIds);
            //Assert.IsType<HubDbTableV3>(response);
        }
    }
}
