/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing BlogTagsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BlogTagsApiTests : IDisposable
    {
        private BlogTagsApi instance;

        public BlogTagsApiTests()
        {
            instance = new BlogTagsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BlogTagsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BlogTagsApi
            //Assert.IsType<BlogTagsApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3BlogsTagsObjectIdArchive
        /// </summary>
        [Fact]
        public void DeleteCmsV3BlogsTagsObjectIdArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //instance.DeleteCmsV3BlogsTagsObjectIdArchive(objectId, archived);
        }

        /// <summary>
        /// Test GetCmsV3BlogsTagsGetPage
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsTagsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTimeOffset? createdAt = null;
            //DateTimeOffset? createdAfter = null;
            //DateTimeOffset? createdBefore = null;
            //DateTimeOffset? updatedAt = null;
            //DateTimeOffset? updatedAfter = null;
            //DateTimeOffset? updatedBefore = null;
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsTagsGetPage(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived);
            //Assert.IsType<CollectionResponseWithTotalTagForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsTagsObjectIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsTagsObjectIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsTagsObjectIdGetById(objectId, archived);
            //Assert.IsType<Tag>(response);
        }

        /// <summary>
        /// Test PatchCmsV3BlogsTagsObjectIdUpdate
        /// </summary>
        [Fact]
        public void PatchCmsV3BlogsTagsObjectIdUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //Tag tag = null;
            //bool? archived = null;
            //var response = instance.PatchCmsV3BlogsTagsObjectIdUpdate(objectId, tag, archived);
            //Assert.IsType<Tag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsBatchArchiveArchiveBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsBatchArchiveArchiveBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //instance.PostCmsV3BlogsTagsBatchArchiveArchiveBatch(batchInputString);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsBatchCreateCreateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsBatchCreateCreateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputTag batchInputTag = null;
            //var response = instance.PostCmsV3BlogsTagsBatchCreateCreateBatch(batchInputTag);
            //Assert.IsType<BatchResponseTag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsBatchReadReadBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsBatchReadReadBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsTagsBatchReadReadBatch(batchInputString, archived);
            //Assert.IsType<BatchResponseTag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsBatchUpdateUpdateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsBatchUpdateUpdateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputJsonNode batchInputJsonNode = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsTagsBatchUpdateUpdateBatch(batchInputJsonNode, archived);
            //Assert.IsType<BatchResponseTag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsCreate
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Tag tag = null;
            //var response = instance.PostCmsV3BlogsTagsCreate(tag);
            //Assert.IsType<Tag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsMultiLanguageAttachToLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsMultiLanguageAttachToLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AttachToLangPrimaryRequestVNext attachToLangPrimaryRequestVNext = null;
            //var response = instance.PostCmsV3BlogsTagsMultiLanguageAttachToLangGroup(attachToLangPrimaryRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsMultiLanguageCreateLanguageVariation
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsMultiLanguageCreateLanguageVariationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagCloneRequestVNext tagCloneRequestVNext = null;
            //var response = instance.PostCmsV3BlogsTagsMultiLanguageCreateLanguageVariation(tagCloneRequestVNext);
            //Assert.IsType<Tag>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsMultiLanguageDetachFromLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsMultiLanguageDetachFromLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DetachFromLangGroupRequestVNext detachFromLangGroupRequestVNext = null;
            //var response = instance.PostCmsV3BlogsTagsMultiLanguageDetachFromLangGroup(detachFromLangGroupRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsTagsMultiLanguageUpdateLanguages
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsTagsMultiLanguageUpdateLanguagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateLanguagesRequestVNext updateLanguagesRequestVNext = null;
            //var response = instance.PostCmsV3BlogsTagsMultiLanguageUpdateLanguages(updateLanguagesRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PutCmsV3BlogsTagsMultiLanguageSetNewLangPrimary
        /// </summary>
        [Fact]
        public void PutCmsV3BlogsTagsMultiLanguageSetNewLangPrimaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetNewLanguagePrimaryRequestVNext setNewLanguagePrimaryRequestVNext = null;
            //instance.PutCmsV3BlogsTagsMultiLanguageSetNewLangPrimary(setNewLanguagePrimaryRequestVNext);
        }
    }
}
