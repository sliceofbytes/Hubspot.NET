/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing BatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BatchApiTests : IDisposable
    {
        private BatchApi instance;

        public BatchApiTests()
        {
            instance = new BatchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BatchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BatchApi
            //Assert.IsType<BatchApi>(instance);
        }

        /// <summary>
        /// Test PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicAssociation batchInputPublicAssociation = null;
            //instance.PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchArchiveArchive(fromObjectType, toObjectType, batchInputPublicAssociation);
        }

        /// <summary>
        /// Test PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicAssociation batchInputPublicAssociation = null;
            //var response = instance.PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchCreateCreate(fromObjectType, toObjectType, batchInputPublicAssociation);
            //Assert.IsType<BatchResponsePublicAssociation>(response);
        }

        /// <summary>
        /// Test PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicObjectId batchInputPublicObjectId = null;
            //var response = instance.PostCrmV3AssociationsFromObjectTypeToObjectTypeBatchReadRead(fromObjectType, toObjectType, batchInputPublicObjectId);
            //Assert.IsType<BatchResponsePublicAssociationMulti>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsCompaniesBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsCompaniesBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsCompaniesBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsCompaniesBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsCompaniesBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompaniesBatchInputSimplePublicObjectInput companiesBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsCompaniesBatchCreateCreate(companiesBatchInputSimplePublicObjectInput);
            //Assert.IsType<CompaniesBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsCompaniesBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsCompaniesBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsCompaniesBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<CompaniesBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsCompaniesBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsCompaniesBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompaniesBatchInputSimplePublicObjectBatchInput companiesBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsCompaniesBatchUpdateUpdate(companiesBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<CompaniesBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsContactsBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsContactsBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsContactsBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsContactsBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsContactsBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactsBatchInputSimplePublicObjectInput contactsBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsContactsBatchCreateCreate(contactsBatchInputSimplePublicObjectInput);
            //Assert.IsType<ContactsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsContactsBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsContactsBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsContactsBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<ContactsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsContactsBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsContactsBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactsBatchInputSimplePublicObjectBatchInput contactsBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsContactsBatchUpdateUpdate(contactsBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<ContactsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsDealsBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsDealsBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsDealsBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsDealsBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsDealsBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DealsBatchInputSimplePublicObjectInput dealsBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsDealsBatchCreateCreate(dealsBatchInputSimplePublicObjectInput);
            //Assert.IsType<DealsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsDealsBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsDealsBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsDealsBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<DealsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsDealsBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsDealsBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DealsBatchInputSimplePublicObjectBatchInput dealsBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsDealsBatchUpdateUpdate(dealsBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<DealsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsFeedbackSubmissionsBatchReadReadBatch
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsFeedbackSubmissionsBatchReadReadBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsFeedbackSubmissionsBatchReadReadBatch(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<FeedbackSubmissionsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsLineItemsBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsLineItemsBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsLineItemsBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsLineItemsBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsLineItemsBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LineItemsBatchInputSimplePublicObjectInput lineItemsBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsLineItemsBatchCreateCreate(lineItemsBatchInputSimplePublicObjectInput);
            //Assert.IsType<LineItemsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsLineItemsBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsLineItemsBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsLineItemsBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<LineItemsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsLineItemsBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsLineItemsBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LineItemsBatchInputSimplePublicObjectBatchInput lineItemsBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsLineItemsBatchUpdateUpdate(lineItemsBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<LineItemsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsObjectTypeBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsObjectTypeBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsObjectTypeBatchArchiveArchive(objectType, batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsObjectTypeBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsObjectTypeBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //ObjectsBatchInputSimplePublicObjectInput objectsBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsObjectTypeBatchCreateCreate(objectType, objectsBatchInputSimplePublicObjectInput);
            //Assert.IsType<ObjectsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsObjectTypeBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsObjectTypeBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsObjectTypeBatchReadRead(objectType, batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<ObjectsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsObjectTypeBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsObjectTypeBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //ObjectsBatchInputSimplePublicObjectBatchInput objectsBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsObjectTypeBatchUpdateUpdate(objectType, objectsBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<ObjectsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsProductsBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsProductsBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsProductsBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsProductsBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsProductsBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectInput batchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsProductsBatchCreateCreate(batchInputSimplePublicObjectInput);
            //Assert.IsType<BatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsProductsBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsProductsBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsProductsBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<BatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsProductsBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsProductsBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectBatchInput batchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsProductsBatchUpdateUpdate(batchInputSimplePublicObjectBatchInput);
            //Assert.IsType<BatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsQuotesBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsQuotesBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsQuotesBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<QuotesBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsTicketsBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsTicketsBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputSimplePublicObjectId batchInputSimplePublicObjectId = null;
            //instance.PostCrmV3ObjectsTicketsBatchArchiveArchive(batchInputSimplePublicObjectId);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsTicketsBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsTicketsBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TicketsBatchInputSimplePublicObjectInput ticketsBatchInputSimplePublicObjectInput = null;
            //var response = instance.PostCrmV3ObjectsTicketsBatchCreateCreate(ticketsBatchInputSimplePublicObjectInput);
            //Assert.IsType<TicketsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsTicketsBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsTicketsBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchReadInputSimplePublicObjectId batchReadInputSimplePublicObjectId = null;
            //bool? archived = null;
            //var response = instance.PostCrmV3ObjectsTicketsBatchReadRead(batchReadInputSimplePublicObjectId, archived);
            //Assert.IsType<TicketsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3ObjectsTicketsBatchUpdateUpdate
        /// </summary>
        [Fact]
        public void PostCrmV3ObjectsTicketsBatchUpdateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TicketsBatchInputSimplePublicObjectBatchInput ticketsBatchInputSimplePublicObjectBatchInput = null;
            //var response = instance.PostCrmV3ObjectsTicketsBatchUpdateUpdate(ticketsBatchInputSimplePublicObjectBatchInput);
            //Assert.IsType<TicketsBatchResponseSimplePublicObject>(response);
        }

        /// <summary>
        /// Test PostCrmV3PropertiesObjectTypeBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV3PropertiesObjectTypeBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //BatchInputPropertyName batchInputPropertyName = null;
            //instance.PostCrmV3PropertiesObjectTypeBatchArchiveArchive(objectType, batchInputPropertyName);
        }

        /// <summary>
        /// Test PostCrmV3PropertiesObjectTypeBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV3PropertiesObjectTypeBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //BatchInputPropertyCreate batchInputPropertyCreate = null;
            //var response = instance.PostCrmV3PropertiesObjectTypeBatchCreateCreate(objectType, batchInputPropertyCreate);
            //Assert.IsType<BatchResponseProperty>(response);
        }

        /// <summary>
        /// Test PostCrmV3PropertiesObjectTypeBatchReadRead
        /// </summary>
        [Fact]
        public void PostCrmV3PropertiesObjectTypeBatchReadReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectType = null;
            //BatchReadInputPropertyName batchReadInputPropertyName = null;
            //var response = instance.PostCrmV3PropertiesObjectTypeBatchReadRead(objectType, batchReadInputPropertyName);
            //Assert.IsType<BatchResponseProperty>(response);
        }

        /// <summary>
        /// Test PostMarketingV3MarketingEventsEventsDelete
        /// </summary>
        [Fact]
        public void PostMarketingV3MarketingEventsEventsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputMarketingEventExternalUniqueIdentifier batchInputMarketingEventExternalUniqueIdentifier = null;
            //var response = instance.PostMarketingV3MarketingEventsEventsDelete(batchInputMarketingEventExternalUniqueIdentifier);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostMarketingV3MarketingEventsEventsUpsert
        /// </summary>
        [Fact]
        public void PostMarketingV3MarketingEventsEventsUpsertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputMarketingEventCreateRequestParams batchInputMarketingEventCreateRequestParams = null;
            //var response = instance.PostMarketingV3MarketingEventsEventsUpsert(batchInputMarketingEventCreateRequestParams);
            //Assert.IsType<BatchResponseMarketingEventPublicDefaultResponse>(response);
        }
    }
}
