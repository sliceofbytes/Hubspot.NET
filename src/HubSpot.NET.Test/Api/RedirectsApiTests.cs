/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.NET.Client;
using HubSpot.NET.Api;
// uncomment below to import models
//using HubSpot.NET.Model;

namespace HubSpot.NET.Test.Api
{
    /// <summary>
    ///  Class for testing RedirectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RedirectsApiTests : IDisposable
    {
        private RedirectsApi instance;

        public RedirectsApiTests()
        {
            instance = new RedirectsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RedirectsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RedirectsApi
            //Assert.IsType<RedirectsApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3UrlRedirectsUrlRedirectIdArchive
        /// </summary>
        [Fact]
        public void DeleteCmsV3UrlRedirectsUrlRedirectIdArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlRedirectId = null;
            //instance.DeleteCmsV3UrlRedirectsUrlRedirectIdArchive(urlRedirectId);
        }

        /// <summary>
        /// Test GetCmsV3UrlRedirectsGetPage
        /// </summary>
        [Fact]
        public void GetCmsV3UrlRedirectsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTimeOffset? createdAt = null;
            //DateTimeOffset? createdAfter = null;
            //DateTimeOffset? createdBefore = null;
            //DateTimeOffset? updatedAt = null;
            //DateTimeOffset? updatedAfter = null;
            //DateTimeOffset? updatedBefore = null;
            //List<string> sort = null;
            //List<string> properties = null;
            //string after = null;
            //string before = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3UrlRedirectsGetPage(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, properties, after, before, limit, archived);
            //Assert.IsType<CollectionResponseWithTotalUrlMapping>(response);
        }

        /// <summary>
        /// Test GetCmsV3UrlRedirectsUrlRedirectIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3UrlRedirectsUrlRedirectIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlRedirectId = null;
            //var response = instance.GetCmsV3UrlRedirectsUrlRedirectIdGetById(urlRedirectId);
            //Assert.IsType<UrlMapping>(response);
        }

        /// <summary>
        /// Test PatchCmsV3UrlRedirectsUrlRedirectIdUpdate
        /// </summary>
        [Fact]
        public void PatchCmsV3UrlRedirectsUrlRedirectIdUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlRedirectId = null;
            //UrlMapping urlMapping = null;
            //var response = instance.PatchCmsV3UrlRedirectsUrlRedirectIdUpdate(urlRedirectId, urlMapping);
            //Assert.IsType<UrlMapping>(response);
        }

        /// <summary>
        /// Test PostCmsV3UrlRedirectsCreate
        /// </summary>
        [Fact]
        public void PostCmsV3UrlRedirectsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UrlMappingCreateRequestBody urlMappingCreateRequestBody = null;
            //var response = instance.PostCmsV3UrlRedirectsCreate(urlMappingCreateRequestBody);
            //Assert.IsType<UrlMapping>(response);
        }
    }
}
