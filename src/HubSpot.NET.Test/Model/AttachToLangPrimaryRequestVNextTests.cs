/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.NET.Api;
using HubSpot.NET.Model;
using HubSpot.NET.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.NET.Test.Model
{
    /// <summary>
    ///  Class for testing AttachToLangPrimaryRequestVNext
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AttachToLangPrimaryRequestVNextTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AttachToLangPrimaryRequestVNext
        //private AttachToLangPrimaryRequestVNext instance;

        public AttachToLangPrimaryRequestVNextTests()
        {
            // TODO uncomment below to create an instance of AttachToLangPrimaryRequestVNext
            //instance = new AttachToLangPrimaryRequestVNext();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AttachToLangPrimaryRequestVNext
        /// </summary>
        [Fact]
        public void AttachToLangPrimaryRequestVNextInstanceTest()
        {
            // TODO uncomment below to test "IsType" AttachToLangPrimaryRequestVNext
            //Assert.IsType<AttachToLangPrimaryRequestVNext>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Fact]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'PrimaryId'
        /// </summary>
        [Fact]
        public void PrimaryIdTest()
        {
            // TODO unit test for the property 'PrimaryId'
        }
        /// <summary>
        /// Test the property 'PrimaryLanguage'
        /// </summary>
        [Fact]
        public void PrimaryLanguageTest()
        {
            // TODO unit test for the property 'PrimaryLanguage'
        }

    }

}
