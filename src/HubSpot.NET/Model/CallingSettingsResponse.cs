/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubSpot.NET.Client.OpenAPIDateConverter;

namespace HubSpot.NET.Model
{
    /// <summary>
    /// Current settings state
    /// </summary>
    [DataContract(Name = "CallingSettingsResponse")]
    public partial class CallingSettingsResponse : IEquatable<CallingSettingsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallingSettingsResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CallingSettingsResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CallingSettingsResponse" /> class.
        /// </summary>
        /// <param name="name">The name of your calling service to display to users. (required).</param>
        /// <param name="url">The URL to your phone/calling UI, built with the [Calling SDK](#). (required).</param>
        /// <param name="height">The target height of the iframe that will contain your phone/calling UI. (required).</param>
        /// <param name="width">The target width of the iframe that will contain your phone/calling UI. (required).</param>
        /// <param name="isReady">When true, your service will appear as an option under the *Call* action in contact records of connected accounts. (required).</param>
        /// <param name="supportsCustomObjects">When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects. (required).</param>
        /// <param name="createdAt">When this calling extension was created. (required).</param>
        /// <param name="updatedAt">The last time the settings for this calling extension were modified. (required).</param>
        public CallingSettingsResponse(string name = default(string), string url = default(string), int height = default(int), int width = default(int), bool isReady = default(bool), bool supportsCustomObjects = default(bool), DateTimeOffset createdAt = default(DateTimeOffset), DateTimeOffset updatedAt = default(DateTimeOffset))
        {
            // to ensure "name" is required (not null)
            if (name == null) {
                throw new ArgumentNullException("name is a required property for CallingSettingsResponse and cannot be null");
            }
            this.Name = name;
            // to ensure "url" is required (not null)
            if (url == null) {
                throw new ArgumentNullException("url is a required property for CallingSettingsResponse and cannot be null");
            }
            this.Url = url;
            this.Height = height;
            this.Width = width;
            this.IsReady = isReady;
            this.SupportsCustomObjects = supportsCustomObjects;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// The name of your calling service to display to users.
        /// </summary>
        /// <value>The name of your calling service to display to users.</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The URL to your phone/calling UI, built with the [Calling SDK](#).
        /// </summary>
        /// <value>The URL to your phone/calling UI, built with the [Calling SDK](#).</value>
        [DataMember(Name = "url", IsRequired = true, EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// The target height of the iframe that will contain your phone/calling UI.
        /// </summary>
        /// <value>The target height of the iframe that will contain your phone/calling UI.</value>
        [DataMember(Name = "height", IsRequired = true, EmitDefaultValue = false)]
        public int Height { get; set; }

        /// <summary>
        /// The target width of the iframe that will contain your phone/calling UI.
        /// </summary>
        /// <value>The target width of the iframe that will contain your phone/calling UI.</value>
        [DataMember(Name = "width", IsRequired = true, EmitDefaultValue = false)]
        public int Width { get; set; }

        /// <summary>
        /// When true, your service will appear as an option under the *Call* action in contact records of connected accounts.
        /// </summary>
        /// <value>When true, your service will appear as an option under the *Call* action in contact records of connected accounts.</value>
        [DataMember(Name = "isReady", IsRequired = true, EmitDefaultValue = true)]
        public bool IsReady { get; set; }

        /// <summary>
        /// When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects.
        /// </summary>
        /// <value>When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects.</value>
        [DataMember(Name = "supportsCustomObjects", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsCustomObjects { get; set; }

        /// <summary>
        /// When this calling extension was created.
        /// </summary>
        /// <value>When this calling extension was created.</value>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = false)]
        public DateTimeOffset CreatedAt { get; set; }

        /// <summary>
        /// The last time the settings for this calling extension were modified.
        /// </summary>
        /// <value>The last time the settings for this calling extension were modified.</value>
        [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = false)]
        public DateTimeOffset UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CallingSettingsResponse {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  IsReady: ").Append(IsReady).Append("\n");
            sb.Append("  SupportsCustomObjects: ").Append(SupportsCustomObjects).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallingSettingsResponse);
        }

        /// <summary>
        /// Returns true if CallingSettingsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CallingSettingsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallingSettingsResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.Height == input.Height ||
                    this.Height.Equals(input.Height)
                ) && 
                (
                    this.Width == input.Width ||
                    this.Width.Equals(input.Width)
                ) && 
                (
                    this.IsReady == input.IsReady ||
                    this.IsReady.Equals(input.IsReady)
                ) && 
                (
                    this.SupportsCustomObjects == input.SupportsCustomObjects ||
                    this.SupportsCustomObjects.Equals(input.SupportsCustomObjects)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Url != null)
                {
                    hashCode = (hashCode * 59) + this.Url.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Height.GetHashCode();
                hashCode = (hashCode * 59) + this.Width.GetHashCode();
                hashCode = (hashCode * 59) + this.IsReady.GetHashCode();
                hashCode = (hashCode * 59) + this.SupportsCustomObjects.GetHashCode();
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
