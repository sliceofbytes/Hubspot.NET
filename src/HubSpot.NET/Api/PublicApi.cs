/*
 * HubSpot
 *
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using HubSpot.NET.Client;
using HubSpot.NET.Model;

namespace HubSpot.NET.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPublicApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get indexed properties.
        /// </summary>
        /// <remarks>
        /// For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <returns>IndexedData</returns>
        IndexedData GetCmsV3SiteSearchIndexedDataContentIdGetById(string contentId, string type = default(string));

        /// <summary>
        /// Get indexed properties.
        /// </summary>
        /// <remarks>
        /// For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <returns>ApiResponse of IndexedData</returns>
        ApiResponse<IndexedData> GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfo(string contentId, string type = default(string));
        /// <summary>
        /// Search your site.
        /// </summary>
        /// <remarks>
        /// Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <returns>PublicSearchResults</returns>
        PublicSearchResults GetCmsV3SiteSearchSearchSearch(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>));

        /// <summary>
        /// Search your site.
        /// </summary>
        /// <remarks>
        /// Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <returns>ApiResponse of PublicSearchResults</returns>
        ApiResponse<PublicSearchResults> GetCmsV3SiteSearchSearchSearchWithHttpInfo(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPublicApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get indexed properties.
        /// </summary>
        /// <remarks>
        /// For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IndexedData</returns>
        System.Threading.Tasks.Task<IndexedData> GetCmsV3SiteSearchIndexedDataContentIdGetByIdAsync(string contentId, string type = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get indexed properties.
        /// </summary>
        /// <remarks>
        /// For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IndexedData)</returns>
        System.Threading.Tasks.Task<ApiResponse<IndexedData>> GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfoAsync(string contentId, string type = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Search your site.
        /// </summary>
        /// <remarks>
        /// Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PublicSearchResults</returns>
        System.Threading.Tasks.Task<PublicSearchResults> GetCmsV3SiteSearchSearchSearchAsync(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Search your site.
        /// </summary>
        /// <remarks>
        /// Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </remarks>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PublicSearchResults)</returns>
        System.Threading.Tasks.Task<ApiResponse<PublicSearchResults>> GetCmsV3SiteSearchSearchSearchWithHttpInfoAsync(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPublicApi : IPublicApiSync, IPublicApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PublicApi : IPublicApi
    {
        private HubSpot.NET.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PublicApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PublicApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PublicApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PublicApi(string basePath)
        {
            this.Configuration = HubSpot.NET.Client.Configuration.MergeConfigurations(
                HubSpot.NET.Client.GlobalConfiguration.Instance,
                new HubSpot.NET.Client.Configuration { BasePath = basePath }
            );
            this.Client = new HubSpot.NET.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new HubSpot.NET.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = HubSpot.NET.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PublicApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PublicApi(HubSpot.NET.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = HubSpot.NET.Client.Configuration.MergeConfigurations(
                HubSpot.NET.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new HubSpot.NET.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new HubSpot.NET.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = HubSpot.NET.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PublicApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PublicApi(HubSpot.NET.Client.ISynchronousClient client, HubSpot.NET.Client.IAsynchronousClient asyncClient, HubSpot.NET.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = HubSpot.NET.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public HubSpot.NET.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public HubSpot.NET.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public HubSpot.NET.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public HubSpot.NET.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get indexed properties. For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <returns>IndexedData</returns>
        public IndexedData GetCmsV3SiteSearchIndexedDataContentIdGetById(string contentId, string type = default(string))
        {
            HubSpot.NET.Client.ApiResponse<IndexedData> localVarResponse = GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfo(contentId, type);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get indexed properties. For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <returns>ApiResponse of IndexedData</returns>
        public HubSpot.NET.Client.ApiResponse<IndexedData> GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfo(string contentId, string type = default(string))
        {
            // verify the required parameter 'contentId' is set
            if (contentId == null)
            {
                throw new HubSpot.NET.Client.ApiException(400, "Missing required parameter 'contentId' when calling PublicApi->GetCmsV3SiteSearchIndexedDataContentIdGetById");
            }

            HubSpot.NET.Client.RequestOptions localVarRequestOptions = new HubSpot.NET.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.NET.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.NET.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("contentId", HubSpot.NET.Client.ClientUtils.ParameterToString(contentId)); // path parameter
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "type", type));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<IndexedData>("/cms/v3/site-search/indexed-data/{contentId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCmsV3SiteSearchIndexedDataContentIdGetById", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get indexed properties. For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IndexedData</returns>
        public async System.Threading.Tasks.Task<IndexedData> GetCmsV3SiteSearchIndexedDataContentIdGetByIdAsync(string contentId, string type = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.NET.Client.ApiResponse<IndexedData> localVarResponse = await GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfoAsync(contentId, type, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get indexed properties. For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentId">ID of the target document when searching for indexed properties.</param>
        /// <param name="type">The type of document. Can be one of &#x60;SITE_PAGE&#x60;, &#x60;BLOG_POST&#x60;, or &#x60;KNOWLEDGE_ARTICLE&#x60;. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IndexedData)</returns>
        public async System.Threading.Tasks.Task<HubSpot.NET.Client.ApiResponse<IndexedData>> GetCmsV3SiteSearchIndexedDataContentIdGetByIdWithHttpInfoAsync(string contentId, string type = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentId' is set
            if (contentId == null)
            {
                throw new HubSpot.NET.Client.ApiException(400, "Missing required parameter 'contentId' when calling PublicApi->GetCmsV3SiteSearchIndexedDataContentIdGetById");
            }


            HubSpot.NET.Client.RequestOptions localVarRequestOptions = new HubSpot.NET.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.NET.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.NET.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("contentId", HubSpot.NET.Client.ClientUtils.ParameterToString(contentId)); // path parameter
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "type", type));
            }


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<IndexedData>("/cms/v3/site-search/indexed-data/{contentId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCmsV3SiteSearchIndexedDataContentIdGetById", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search your site. Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <returns>PublicSearchResults</returns>
        public PublicSearchResults GetCmsV3SiteSearchSearchSearch(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>))
        {
            HubSpot.NET.Client.ApiResponse<PublicSearchResults> localVarResponse = GetCmsV3SiteSearchSearchSearchWithHttpInfo(q, limit, offset, language, matchPrefix, autocomplete, popularityBoost, boostLimit, minScore, boostRecent, tableId, hubdbQuery, domain, type, pathPrefix, property, length, groupId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search your site. Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <returns>ApiResponse of PublicSearchResults</returns>
        public HubSpot.NET.Client.ApiResponse<PublicSearchResults> GetCmsV3SiteSearchSearchSearchWithHttpInfo(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>))
        {
            HubSpot.NET.Client.RequestOptions localVarRequestOptions = new HubSpot.NET.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.NET.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.NET.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (q != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "q", q));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (language != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "language", language));
            }
            if (matchPrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "matchPrefix", matchPrefix));
            }
            if (autocomplete != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "autocomplete", autocomplete));
            }
            if (popularityBoost != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "popularityBoost", popularityBoost));
            }
            if (boostLimit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "boostLimit", boostLimit));
            }
            if (minScore != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "minScore", minScore));
            }
            if (boostRecent != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "boostRecent", boostRecent));
            }
            if (tableId != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "tableId", tableId));
            }
            if (hubdbQuery != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "hubdbQuery", hubdbQuery));
            }
            if (domain != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "domain", domain));
            }
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "type", type));
            }
            if (pathPrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "pathPrefix", pathPrefix));
            }
            if (property != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "property", property));
            }
            if (length != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "length", length));
            }
            if (groupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "groupId", groupId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<PublicSearchResults>("/cms/v3/site-search/search", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCmsV3SiteSearchSearchSearch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search your site. Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PublicSearchResults</returns>
        public async System.Threading.Tasks.Task<PublicSearchResults> GetCmsV3SiteSearchSearchSearchAsync(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.NET.Client.ApiResponse<PublicSearchResults> localVarResponse = await GetCmsV3SiteSearchSearchSearchWithHttpInfoAsync(q, limit, offset, language, matchPrefix, autocomplete, popularityBoost, boostLimit, minScore, boostRecent, tableId, hubdbQuery, domain, type, pathPrefix, property, length, groupId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search your site. Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.
        /// </summary>
        /// <exception cref="HubSpot.NET.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="q">The term to search for. (optional)</param>
        /// <param name="limit">Specifies the number of results to be returned in a single response. Defaults to &#x60;10&#x60;. Maximum value is &#x60;100&#x60;. (optional)</param>
        /// <param name="offset">Used to page through the results. If there are more results than specified by the &#x60;limit&#x60; parameter, you will need to use the value of offset returned in the previous request to get the next set of results. (optional)</param>
        /// <param name="language">Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. &#x60;es&#x60; for Spanish) (optional)</param>
        /// <param name="matchPrefix">Inverts the behavior of the pathPrefix filter when set to &#x60;false&#x60;. Defaults to &#x60;true&#x60;. (optional)</param>
        /// <param name="autocomplete">Specifies whether or not you are showing autocomplete results. Defaults to false. (optional)</param>
        /// <param name="popularityBoost">Specifies how strongly a result is boosted based on its view count. Defaults to 1.0. (optional)</param>
        /// <param name="boostLimit">Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html). (optional)</param>
        /// <param name="minScore">Specifies the minimum search score threshold for returned results. This value is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall. (optional)</param>
        /// <param name="boostRecent">Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent&#x3D;10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). (optional)</param>
        /// <param name="tableId">Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the &#x60;hubdbQuery&#x60; parameter to further filter results. (optional)</param>
        /// <param name="hubdbQuery">Specify a HubDB query to further filter the search results. (optional)</param>
        /// <param name="domain">A domain to match search results for. Multiple domains can be provided with &amp;. (optional)</param>
        /// <param name="type">Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE (optional)</param>
        /// <param name="pathPrefix">Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times. (optional)</param>
        /// <param name="property">Specifies which properties to include in the search. Options include &#x60;title&#x60;, &#x60;description&#x60;, and &#x60;html&#x60;. All properties will be searched by default. (optional)</param>
        /// <param name="length">Specifies the length of the search results. Can be set to &#x60;LONG&#x60; or &#x60;SHORT&#x60;. &#x60;SHORT&#x60; will return the first 128 characters of the content&#39;s meta description. &#x60;LONG&#x60; will build a more detailed content snippet based on the html/content of the page. (optional)</param>
        /// <param name="groupId">Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PublicSearchResults)</returns>
        public async System.Threading.Tasks.Task<HubSpot.NET.Client.ApiResponse<PublicSearchResults>> GetCmsV3SiteSearchSearchSearchWithHttpInfoAsync(string q = default(string), int? limit = default(int?), int? offset = default(int?), string language = default(string), bool? matchPrefix = default(bool?), bool? autocomplete = default(bool?), decimal? popularityBoost = default(decimal?), decimal? boostLimit = default(decimal?), decimal? minScore = default(decimal?), string boostRecent = default(string), long? tableId = default(long?), string hubdbQuery = default(string), List<string> domain = default(List<string>), List<string> type = default(List<string>), List<string> pathPrefix = default(List<string>), List<string> property = default(List<string>), string length = default(string), List<long> groupId = default(List<long>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            HubSpot.NET.Client.RequestOptions localVarRequestOptions = new HubSpot.NET.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.NET.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.NET.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (q != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "q", q));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (language != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "language", language));
            }
            if (matchPrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "matchPrefix", matchPrefix));
            }
            if (autocomplete != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "autocomplete", autocomplete));
            }
            if (popularityBoost != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "popularityBoost", popularityBoost));
            }
            if (boostLimit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "boostLimit", boostLimit));
            }
            if (minScore != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "minScore", minScore));
            }
            if (boostRecent != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "boostRecent", boostRecent));
            }
            if (tableId != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "tableId", tableId));
            }
            if (hubdbQuery != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "hubdbQuery", hubdbQuery));
            }
            if (domain != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "domain", domain));
            }
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "type", type));
            }
            if (pathPrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "pathPrefix", pathPrefix));
            }
            if (property != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "property", property));
            }
            if (length != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("", "length", length));
            }
            if (groupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.NET.Client.ClientUtils.ParameterToMultiMap("multi", "groupId", groupId));
            }


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PublicSearchResults>("/cms/v3/site-search/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCmsV3SiteSearchSearchSearch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
